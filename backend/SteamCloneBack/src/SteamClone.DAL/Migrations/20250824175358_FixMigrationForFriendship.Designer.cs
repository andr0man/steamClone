// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SteamClone.DAL.Data;

#nullable disable

namespace SteamClone.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250824175358_FixMigrationForFriendship")]
    partial class FixMigrationForFriendship
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DeveloperAndPublisherUser", b =>
                {
                    b.Property<string>("AssociatedUsersId")
                        .HasColumnType("text")
                        .HasColumnName("associated_users_id");

                    b.Property<string>("DeveloperAndPublisherId")
                        .HasColumnType("text")
                        .HasColumnName("developer_and_publisher_id");

                    b.HasKey("AssociatedUsersId", "DeveloperAndPublisherId")
                        .HasName("pk_dev_and_pub_associated_users");

                    b.HasIndex("DeveloperAndPublisherId")
                        .HasDatabaseName("ix_dev_and_pub_associated_users_developer_and_publisher_id");

                    b.ToTable("dev_and_pub_associated_users", (string)null);
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.Property<string>("GameId")
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<int>("GenresId")
                        .HasColumnType("integer")
                        .HasColumnName("genres_id");

                    b.HasKey("GameId", "GenresId")
                        .HasName("pk_game_genre");

                    b.HasIndex("GenresId")
                        .HasDatabaseName("ix_game_genre_genres_id");

                    b.ToTable("game_genre", (string)null);
                });

            modelBuilder.Entity("GameUser", b =>
                {
                    b.Property<string>("AssociatedUsersId")
                        .HasColumnType("text")
                        .HasColumnName("associated_users_id");

                    b.Property<string>("GameId")
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.HasKey("AssociatedUsersId", "GameId")
                        .HasName("pk_games_associated_users");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_games_associated_users_game_id");

                    b.ToTable("games_associated_users", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("create_date")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<DateTime>("ExpiredDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("expired_date")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean")
                        .HasColumnName("is_used");

                    b.Property<string>("JwtId")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("jwt_id");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("character varying(450)")
                        .HasColumnName("token");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_refresh_tokens");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_refresh_tokens_user_id");

                    b.ToTable("refresh_tokens", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("character varying(25)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_roles");

                    b.ToTable("roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "admin",
                            Name = "admin"
                        },
                        new
                        {
                            Id = "user",
                            Name = "user"
                        },
                        new
                        {
                            Id = "manager",
                            Name = "manager"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.Balance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_balances");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasDatabaseName("ix_balances_user_id");

                    b.ToTable("balances", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "c784dc40-3048-4e2c-8efa-78f454aef4d8",
                            Amount = 100m,
                            UserId = "5c0d6c29-f4fb-45fc-bba9-5ae14da286c0"
                        },
                        new
                        {
                            Id = "561d6d73-d03b-4616-84d6-8dc4d7a080fd",
                            Amount = 100m,
                            UserId = "fd46d035-183c-45ea-8315-30ec9a200061"
                        },
                        new
                        {
                            Id = "22c0fe80-d253-4aa9-ab8f-8b41ad350bd9",
                            Amount = 100m,
                            UserId = "e2397ea1-6d88-4d11-88f4-951b57ef65e2"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.Friendship", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("receiver_id");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sender_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_friendships");

                    b.HasIndex("ReceiverId")
                        .HasDatabaseName("ix_friendships_receiver_id");

                    b.HasIndex("SenderId")
                        .HasDatabaseName("ix_friendships_sender_id");

                    b.ToTable("friendships", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("text")
                        .HasColumnName("avatar_url");

                    b.Property<string>("Bio")
                        .HasColumnType("text")
                        .HasColumnName("bio");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("email_confirmed");

                    b.Property<string>("ExternalProvider")
                        .HasColumnType("text")
                        .HasColumnName("external_provider");

                    b.Property<string>("ExternalProviderKey")
                        .HasColumnType("text")
                        .HasColumnName("external_provider_key");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("nickname");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_users_country_id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_users_created_by");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_users_modified_by");

                    b.HasIndex("RoleId")
                        .HasDatabaseName("ix_users_role_id");

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "5c0d6c29-f4fb-45fc-bba9-5ae14da286c0",
                            CountryId = 231,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@mail.com",
                            EmailConfirmed = true,
                            Level = 0,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nickname = "Admin",
                            PasswordHash = "7D64D8B0B76B23625CA2804E54F2B9F9562EE3175AD21AB02ACB9AE80E80C970-C8DCFB0B66B8BA472A481750248172C3",
                            RoleId = "admin"
                        },
                        new
                        {
                            Id = "fd46d035-183c-45ea-8315-30ec9a200061",
                            CountryId = 231,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "user@mail.com",
                            EmailConfirmed = true,
                            Level = 0,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nickname = "User",
                            PasswordHash = "7D64D8B0B76B23625CA2804E54F2B9F9562EE3175AD21AB02ACB9AE80E80C970-C8DCFB0B66B8BA472A481750248172C3",
                            RoleId = "user"
                        },
                        new
                        {
                            Id = "e2397ea1-6d88-4d11-88f4-951b57ef65e2",
                            CountryId = 231,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@mail.com",
                            EmailConfirmed = true,
                            Level = 0,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Nickname = "Manager",
                            PasswordHash = "7D64D8B0B76B23625CA2804E54F2B9F9562EE3175AD21AB02ACB9AE80E80C970-C8DCFB0B66B8BA472A481750248172C3",
                            RoleId = "manager"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Countries.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alpha2Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("alpha2code");

                    b.Property<string>("Alpha3Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("alpha3code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_countries");

                    b.ToTable("countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Alpha2Code = "AF",
                            Alpha3Code = "AFG",
                            Name = "Afghanistan"
                        },
                        new
                        {
                            Id = 2,
                            Alpha2Code = "AL",
                            Alpha3Code = "ALB",
                            Name = "Albania"
                        },
                        new
                        {
                            Id = 3,
                            Alpha2Code = "DZ",
                            Alpha3Code = "DZA",
                            Name = "Algeria"
                        },
                        new
                        {
                            Id = 4,
                            Alpha2Code = "AS",
                            Alpha3Code = "ASM",
                            Name = "American Samoa"
                        },
                        new
                        {
                            Id = 5,
                            Alpha2Code = "AD",
                            Alpha3Code = "AND",
                            Name = "Andorra"
                        },
                        new
                        {
                            Id = 6,
                            Alpha2Code = "AO",
                            Alpha3Code = "AGO",
                            Name = "Angola"
                        },
                        new
                        {
                            Id = 7,
                            Alpha2Code = "AI",
                            Alpha3Code = "AIA",
                            Name = "Anguilla"
                        },
                        new
                        {
                            Id = 8,
                            Alpha2Code = "AQ",
                            Alpha3Code = "ATA",
                            Name = "Antarctica"
                        },
                        new
                        {
                            Id = 9,
                            Alpha2Code = "AG",
                            Alpha3Code = "ATG",
                            Name = "Antigua and Barbuda"
                        },
                        new
                        {
                            Id = 10,
                            Alpha2Code = "AR",
                            Alpha3Code = "ARG",
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = 11,
                            Alpha2Code = "AM",
                            Alpha3Code = "ARM",
                            Name = "Armenia"
                        },
                        new
                        {
                            Id = 12,
                            Alpha2Code = "AW",
                            Alpha3Code = "ABW",
                            Name = "Aruba"
                        },
                        new
                        {
                            Id = 13,
                            Alpha2Code = "AU",
                            Alpha3Code = "AUS",
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 14,
                            Alpha2Code = "AT",
                            Alpha3Code = "AUT",
                            Name = "Austria"
                        },
                        new
                        {
                            Id = 15,
                            Alpha2Code = "AZ",
                            Alpha3Code = "AZE",
                            Name = "Azerbaijan"
                        },
                        new
                        {
                            Id = 16,
                            Alpha2Code = "BS",
                            Alpha3Code = "BHS",
                            Name = "Bahamas"
                        },
                        new
                        {
                            Id = 17,
                            Alpha2Code = "BH",
                            Alpha3Code = "BHR",
                            Name = "Bahrain"
                        },
                        new
                        {
                            Id = 18,
                            Alpha2Code = "BD",
                            Alpha3Code = "BGD",
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 19,
                            Alpha2Code = "BB",
                            Alpha3Code = "BRB",
                            Name = "Barbados"
                        },
                        new
                        {
                            Id = 20,
                            Alpha2Code = "BY",
                            Alpha3Code = "BLR",
                            Name = "Belarus"
                        },
                        new
                        {
                            Id = 21,
                            Alpha2Code = "BE",
                            Alpha3Code = "BEL",
                            Name = "Belgium"
                        },
                        new
                        {
                            Id = 22,
                            Alpha2Code = "BZ",
                            Alpha3Code = "BLZ",
                            Name = "Belize"
                        },
                        new
                        {
                            Id = 23,
                            Alpha2Code = "BJ",
                            Alpha3Code = "BEN",
                            Name = "Benin"
                        },
                        new
                        {
                            Id = 24,
                            Alpha2Code = "BM",
                            Alpha3Code = "BMU",
                            Name = "Bermuda"
                        },
                        new
                        {
                            Id = 25,
                            Alpha2Code = "BT",
                            Alpha3Code = "BTN",
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 26,
                            Alpha2Code = "BO",
                            Alpha3Code = "BOL",
                            Name = "Bolivia"
                        },
                        new
                        {
                            Id = 27,
                            Alpha2Code = "BQ",
                            Alpha3Code = "BES",
                            Name = "Bonaire, Sint Eustatius and Saba"
                        },
                        new
                        {
                            Id = 28,
                            Alpha2Code = "BA",
                            Alpha3Code = "BIH",
                            Name = "Bosnia and Herzegovina"
                        },
                        new
                        {
                            Id = 29,
                            Alpha2Code = "BW",
                            Alpha3Code = "BWA",
                            Name = "Botswana"
                        },
                        new
                        {
                            Id = 30,
                            Alpha2Code = "BV",
                            Alpha3Code = "BVT",
                            Name = "Bouvet Island"
                        },
                        new
                        {
                            Id = 31,
                            Alpha2Code = "BR",
                            Alpha3Code = "BRA",
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = 32,
                            Alpha2Code = "IO",
                            Alpha3Code = "IOT",
                            Name = "British Indian Ocean Territory"
                        },
                        new
                        {
                            Id = 33,
                            Alpha2Code = "BN",
                            Alpha3Code = "BRN",
                            Name = "Brunei Darussalam"
                        },
                        new
                        {
                            Id = 34,
                            Alpha2Code = "BG",
                            Alpha3Code = "BGR",
                            Name = "Bulgaria"
                        },
                        new
                        {
                            Id = 35,
                            Alpha2Code = "BF",
                            Alpha3Code = "BFA",
                            Name = "Burkina Faso"
                        },
                        new
                        {
                            Id = 36,
                            Alpha2Code = "BI",
                            Alpha3Code = "BDI",
                            Name = "Burundi"
                        },
                        new
                        {
                            Id = 37,
                            Alpha2Code = "KH",
                            Alpha3Code = "KHM",
                            Name = "Cambodia"
                        },
                        new
                        {
                            Id = 38,
                            Alpha2Code = "CM",
                            Alpha3Code = "CMR",
                            Name = "Cameroon"
                        },
                        new
                        {
                            Id = 39,
                            Alpha2Code = "CA",
                            Alpha3Code = "CAN",
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 40,
                            Alpha2Code = "CV",
                            Alpha3Code = "CPV",
                            Name = "Cape Verde"
                        },
                        new
                        {
                            Id = 41,
                            Alpha2Code = "KY",
                            Alpha3Code = "CYM",
                            Name = "Cayman Islands"
                        },
                        new
                        {
                            Id = 42,
                            Alpha2Code = "CF",
                            Alpha3Code = "CAF",
                            Name = "Central African Republic"
                        },
                        new
                        {
                            Id = 43,
                            Alpha2Code = "TD",
                            Alpha3Code = "TCD",
                            Name = "Chad"
                        },
                        new
                        {
                            Id = 44,
                            Alpha2Code = "CL",
                            Alpha3Code = "CHL",
                            Name = "Chile"
                        },
                        new
                        {
                            Id = 45,
                            Alpha2Code = "CN",
                            Alpha3Code = "CHN",
                            Name = "China"
                        },
                        new
                        {
                            Id = 46,
                            Alpha2Code = "CX",
                            Alpha3Code = "CXR",
                            Name = "Christmas Island"
                        },
                        new
                        {
                            Id = 47,
                            Alpha2Code = "CC",
                            Alpha3Code = "CCK",
                            Name = "Cocos (Keeling) Islands"
                        },
                        new
                        {
                            Id = 48,
                            Alpha2Code = "CO",
                            Alpha3Code = "COL",
                            Name = "Colombia"
                        },
                        new
                        {
                            Id = 49,
                            Alpha2Code = "KM",
                            Alpha3Code = "COM",
                            Name = "Comoros"
                        },
                        new
                        {
                            Id = 50,
                            Alpha2Code = "CD",
                            Alpha3Code = "COD",
                            Name = "Congo"
                        },
                        new
                        {
                            Id = 51,
                            Alpha2Code = "CG",
                            Alpha3Code = "COG",
                            Name = "Congo"
                        },
                        new
                        {
                            Id = 52,
                            Alpha2Code = "CK",
                            Alpha3Code = "COK",
                            Name = "Cook Islands"
                        },
                        new
                        {
                            Id = 53,
                            Alpha2Code = "CR",
                            Alpha3Code = "CRI",
                            Name = "Costa Rica"
                        },
                        new
                        {
                            Id = 54,
                            Alpha2Code = "HR",
                            Alpha3Code = "HRV",
                            Name = "Croatia"
                        },
                        new
                        {
                            Id = 55,
                            Alpha2Code = "CU",
                            Alpha3Code = "CUB",
                            Name = "Cuba"
                        },
                        new
                        {
                            Id = 56,
                            Alpha2Code = "CW",
                            Alpha3Code = "CUW",
                            Name = "Curaçao"
                        },
                        new
                        {
                            Id = 57,
                            Alpha2Code = "CY",
                            Alpha3Code = "CYP",
                            Name = "Cyprus"
                        },
                        new
                        {
                            Id = 58,
                            Alpha2Code = "CZ",
                            Alpha3Code = "CZE",
                            Name = "Czech Republic"
                        },
                        new
                        {
                            Id = 59,
                            Alpha2Code = "CI",
                            Alpha3Code = "CIV",
                            Name = "Côte D'Ivoire"
                        },
                        new
                        {
                            Id = 60,
                            Alpha2Code = "DK",
                            Alpha3Code = "DNK",
                            Name = "Denmark"
                        },
                        new
                        {
                            Id = 61,
                            Alpha2Code = "DJ",
                            Alpha3Code = "DJI",
                            Name = "Djibouti"
                        },
                        new
                        {
                            Id = 62,
                            Alpha2Code = "DM",
                            Alpha3Code = "DMA",
                            Name = "Dominica"
                        },
                        new
                        {
                            Id = 63,
                            Alpha2Code = "DO",
                            Alpha3Code = "DOM",
                            Name = "Dominican Republic"
                        },
                        new
                        {
                            Id = 64,
                            Alpha2Code = "EC",
                            Alpha3Code = "ECU",
                            Name = "Ecuador"
                        },
                        new
                        {
                            Id = 65,
                            Alpha2Code = "EG",
                            Alpha3Code = "EGY",
                            Name = "Egypt"
                        },
                        new
                        {
                            Id = 66,
                            Alpha2Code = "SV",
                            Alpha3Code = "SLV",
                            Name = "El Salvador"
                        },
                        new
                        {
                            Id = 67,
                            Alpha2Code = "GQ",
                            Alpha3Code = "GNQ",
                            Name = "Equatorial Guinea"
                        },
                        new
                        {
                            Id = 68,
                            Alpha2Code = "ER",
                            Alpha3Code = "ERI",
                            Name = "Eritrea"
                        },
                        new
                        {
                            Id = 69,
                            Alpha2Code = "EE",
                            Alpha3Code = "EST",
                            Name = "Estonia"
                        },
                        new
                        {
                            Id = 70,
                            Alpha2Code = "ET",
                            Alpha3Code = "ETH",
                            Name = "Ethiopia"
                        },
                        new
                        {
                            Id = 71,
                            Alpha2Code = "FK",
                            Alpha3Code = "FLK",
                            Name = "Falkland Islands (Malvinas)"
                        },
                        new
                        {
                            Id = 72,
                            Alpha2Code = "FO",
                            Alpha3Code = "FRO",
                            Name = "Faroe Islands"
                        },
                        new
                        {
                            Id = 73,
                            Alpha2Code = "FJ",
                            Alpha3Code = "FJI",
                            Name = "Fiji"
                        },
                        new
                        {
                            Id = 74,
                            Alpha2Code = "FI",
                            Alpha3Code = "FIN",
                            Name = "Finland"
                        },
                        new
                        {
                            Id = 75,
                            Alpha2Code = "FR",
                            Alpha3Code = "FRA",
                            Name = "France"
                        },
                        new
                        {
                            Id = 76,
                            Alpha2Code = "GF",
                            Alpha3Code = "GUF",
                            Name = "French Guiana"
                        },
                        new
                        {
                            Id = 77,
                            Alpha2Code = "PF",
                            Alpha3Code = "PYF",
                            Name = "French Polynesia"
                        },
                        new
                        {
                            Id = 78,
                            Alpha2Code = "TF",
                            Alpha3Code = "ATF",
                            Name = "French Southern Territories"
                        },
                        new
                        {
                            Id = 79,
                            Alpha2Code = "GA",
                            Alpha3Code = "GAB",
                            Name = "Gabon"
                        },
                        new
                        {
                            Id = 80,
                            Alpha2Code = "GM",
                            Alpha3Code = "GMB",
                            Name = "Gambia"
                        },
                        new
                        {
                            Id = 81,
                            Alpha2Code = "GE",
                            Alpha3Code = "GEO",
                            Name = "Georgia"
                        },
                        new
                        {
                            Id = 82,
                            Alpha2Code = "DE",
                            Alpha3Code = "DEU",
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 83,
                            Alpha2Code = "GH",
                            Alpha3Code = "GHA",
                            Name = "Ghana"
                        },
                        new
                        {
                            Id = 84,
                            Alpha2Code = "GI",
                            Alpha3Code = "GIB",
                            Name = "Gibraltar"
                        },
                        new
                        {
                            Id = 85,
                            Alpha2Code = "GR",
                            Alpha3Code = "GRC",
                            Name = "Greece"
                        },
                        new
                        {
                            Id = 86,
                            Alpha2Code = "GL",
                            Alpha3Code = "GRL",
                            Name = "Greenland"
                        },
                        new
                        {
                            Id = 87,
                            Alpha2Code = "GD",
                            Alpha3Code = "GRD",
                            Name = "Grenada"
                        },
                        new
                        {
                            Id = 88,
                            Alpha2Code = "GP",
                            Alpha3Code = "GLP",
                            Name = "Guadeloupe"
                        },
                        new
                        {
                            Id = 89,
                            Alpha2Code = "GU",
                            Alpha3Code = "GUM",
                            Name = "Guam"
                        },
                        new
                        {
                            Id = 90,
                            Alpha2Code = "GT",
                            Alpha3Code = "GTM",
                            Name = "Guatemala"
                        },
                        new
                        {
                            Id = 91,
                            Alpha2Code = "GG",
                            Alpha3Code = "GGY",
                            Name = "Guernsey"
                        },
                        new
                        {
                            Id = 92,
                            Alpha2Code = "GN",
                            Alpha3Code = "GIN",
                            Name = "Guinea"
                        },
                        new
                        {
                            Id = 93,
                            Alpha2Code = "GW",
                            Alpha3Code = "GNB",
                            Name = "Guinea-Bissau"
                        },
                        new
                        {
                            Id = 94,
                            Alpha2Code = "GY",
                            Alpha3Code = "GUY",
                            Name = "Guyana"
                        },
                        new
                        {
                            Id = 95,
                            Alpha2Code = "HT",
                            Alpha3Code = "HTI",
                            Name = "Haiti"
                        },
                        new
                        {
                            Id = 96,
                            Alpha2Code = "HM",
                            Alpha3Code = "HMD",
                            Name = "Heard Island and Mcdonald Islands"
                        },
                        new
                        {
                            Id = 97,
                            Alpha2Code = "HN",
                            Alpha3Code = "HND",
                            Name = "Honduras"
                        },
                        new
                        {
                            Id = 98,
                            Alpha2Code = "HK",
                            Alpha3Code = "HKG",
                            Name = "Hong Kong"
                        },
                        new
                        {
                            Id = 99,
                            Alpha2Code = "HU",
                            Alpha3Code = "HUN",
                            Name = "Hungary"
                        },
                        new
                        {
                            Id = 100,
                            Alpha2Code = "IS",
                            Alpha3Code = "ISL",
                            Name = "Iceland"
                        },
                        new
                        {
                            Id = 101,
                            Alpha2Code = "IN",
                            Alpha3Code = "IND",
                            Name = "India"
                        },
                        new
                        {
                            Id = 102,
                            Alpha2Code = "ID",
                            Alpha3Code = "IDN",
                            Name = "Indonesia"
                        },
                        new
                        {
                            Id = 103,
                            Alpha2Code = "IR",
                            Alpha3Code = "IRN",
                            Name = "Iran"
                        },
                        new
                        {
                            Id = 104,
                            Alpha2Code = "IQ",
                            Alpha3Code = "IRQ",
                            Name = "Iraq"
                        },
                        new
                        {
                            Id = 105,
                            Alpha2Code = "IE",
                            Alpha3Code = "IRL",
                            Name = "Ireland"
                        },
                        new
                        {
                            Id = 106,
                            Alpha2Code = "IM",
                            Alpha3Code = "IMN",
                            Name = "Isle of Man"
                        },
                        new
                        {
                            Id = 107,
                            Alpha2Code = "IL",
                            Alpha3Code = "ISR",
                            Name = "Israel"
                        },
                        new
                        {
                            Id = 108,
                            Alpha2Code = "IT",
                            Alpha3Code = "ITA",
                            Name = "Italy"
                        },
                        new
                        {
                            Id = 109,
                            Alpha2Code = "JM",
                            Alpha3Code = "JAM",
                            Name = "Jamaica"
                        },
                        new
                        {
                            Id = 110,
                            Alpha2Code = "JP",
                            Alpha3Code = "JPN",
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 111,
                            Alpha2Code = "JE",
                            Alpha3Code = "JEY",
                            Name = "Jersey"
                        },
                        new
                        {
                            Id = 112,
                            Alpha2Code = "JO",
                            Alpha3Code = "JOR",
                            Name = "Jordan"
                        },
                        new
                        {
                            Id = 113,
                            Alpha2Code = "KZ",
                            Alpha3Code = "KAZ",
                            Name = "Kazakhstan"
                        },
                        new
                        {
                            Id = 114,
                            Alpha2Code = "KE",
                            Alpha3Code = "KEN",
                            Name = "Kenya"
                        },
                        new
                        {
                            Id = 115,
                            Alpha2Code = "KI",
                            Alpha3Code = "KIR",
                            Name = "Kiribati"
                        },
                        new
                        {
                            Id = 116,
                            Alpha2Code = "KW",
                            Alpha3Code = "KWT",
                            Name = "Kuwait"
                        },
                        new
                        {
                            Id = 117,
                            Alpha2Code = "KG",
                            Alpha3Code = "KGZ",
                            Name = "Kyrgyzstan"
                        },
                        new
                        {
                            Id = 118,
                            Alpha2Code = "LA",
                            Alpha3Code = "LAO",
                            Name = "Lao People's Democratic Republic"
                        },
                        new
                        {
                            Id = 119,
                            Alpha2Code = "LV",
                            Alpha3Code = "LVA",
                            Name = "Latvia"
                        },
                        new
                        {
                            Id = 120,
                            Alpha2Code = "LB",
                            Alpha3Code = "LBN",
                            Name = "Lebanon"
                        },
                        new
                        {
                            Id = 121,
                            Alpha2Code = "LS",
                            Alpha3Code = "LSO",
                            Name = "Lesotho"
                        },
                        new
                        {
                            Id = 122,
                            Alpha2Code = "LR",
                            Alpha3Code = "LBR",
                            Name = "Liberia"
                        },
                        new
                        {
                            Id = 123,
                            Alpha2Code = "LY",
                            Alpha3Code = "LBY",
                            Name = "Libya"
                        },
                        new
                        {
                            Id = 124,
                            Alpha2Code = "LI",
                            Alpha3Code = "LIE",
                            Name = "Liechtenstein"
                        },
                        new
                        {
                            Id = 125,
                            Alpha2Code = "LT",
                            Alpha3Code = "LTU",
                            Name = "Lithuania"
                        },
                        new
                        {
                            Id = 126,
                            Alpha2Code = "LU",
                            Alpha3Code = "LUX",
                            Name = "Luxembourg"
                        },
                        new
                        {
                            Id = 127,
                            Alpha2Code = "MO",
                            Alpha3Code = "MAC",
                            Name = "Macao"
                        },
                        new
                        {
                            Id = 128,
                            Alpha2Code = "MK",
                            Alpha3Code = "MKD",
                            Name = "Macedonia"
                        },
                        new
                        {
                            Id = 129,
                            Alpha2Code = "MG",
                            Alpha3Code = "MDG",
                            Name = "Madagascar"
                        },
                        new
                        {
                            Id = 130,
                            Alpha2Code = "MW",
                            Alpha3Code = "MWI",
                            Name = "Malawi"
                        },
                        new
                        {
                            Id = 131,
                            Alpha2Code = "MY",
                            Alpha3Code = "MYS",
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 132,
                            Alpha2Code = "MV",
                            Alpha3Code = "MDV",
                            Name = "Maldives"
                        },
                        new
                        {
                            Id = 133,
                            Alpha2Code = "ML",
                            Alpha3Code = "MLI",
                            Name = "Mali"
                        },
                        new
                        {
                            Id = 134,
                            Alpha2Code = "MT",
                            Alpha3Code = "MLT",
                            Name = "Malta"
                        },
                        new
                        {
                            Id = 135,
                            Alpha2Code = "MH",
                            Alpha3Code = "MHL",
                            Name = "Marshall Islands"
                        },
                        new
                        {
                            Id = 136,
                            Alpha2Code = "MQ",
                            Alpha3Code = "MTQ",
                            Name = "Martinique"
                        },
                        new
                        {
                            Id = 137,
                            Alpha2Code = "MR",
                            Alpha3Code = "MRT",
                            Name = "Mauritania"
                        },
                        new
                        {
                            Id = 138,
                            Alpha2Code = "MU",
                            Alpha3Code = "MUS",
                            Name = "Mauritius"
                        },
                        new
                        {
                            Id = 139,
                            Alpha2Code = "YT",
                            Alpha3Code = "MYT",
                            Name = "Mayotte"
                        },
                        new
                        {
                            Id = 140,
                            Alpha2Code = "MX",
                            Alpha3Code = "MEX",
                            Name = "Mexico"
                        },
                        new
                        {
                            Id = 141,
                            Alpha2Code = "FM",
                            Alpha3Code = "FSM",
                            Name = "Micronesia"
                        },
                        new
                        {
                            Id = 142,
                            Alpha2Code = "MD",
                            Alpha3Code = "MDA",
                            Name = "Moldova"
                        },
                        new
                        {
                            Id = 143,
                            Alpha2Code = "MC",
                            Alpha3Code = "MCO",
                            Name = "Monaco"
                        },
                        new
                        {
                            Id = 144,
                            Alpha2Code = "MN",
                            Alpha3Code = "MNG",
                            Name = "Mongolia"
                        },
                        new
                        {
                            Id = 145,
                            Alpha2Code = "ME",
                            Alpha3Code = "MNE",
                            Name = "Montenegro"
                        },
                        new
                        {
                            Id = 146,
                            Alpha2Code = "MS",
                            Alpha3Code = "MSR",
                            Name = "Montserrat"
                        },
                        new
                        {
                            Id = 147,
                            Alpha2Code = "MA",
                            Alpha3Code = "MAR",
                            Name = "Morocco"
                        },
                        new
                        {
                            Id = 148,
                            Alpha2Code = "MZ",
                            Alpha3Code = "MOZ",
                            Name = "Mozambique"
                        },
                        new
                        {
                            Id = 149,
                            Alpha2Code = "MM",
                            Alpha3Code = "MMR",
                            Name = "Myanmar"
                        },
                        new
                        {
                            Id = 150,
                            Alpha2Code = "NA",
                            Alpha3Code = "NAM",
                            Name = "Namibia"
                        },
                        new
                        {
                            Id = 151,
                            Alpha2Code = "NR",
                            Alpha3Code = "NRU",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 152,
                            Alpha2Code = "NP",
                            Alpha3Code = "NPL",
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 153,
                            Alpha2Code = "NL",
                            Alpha3Code = "NLD",
                            Name = "Netherlands"
                        },
                        new
                        {
                            Id = 154,
                            Alpha2Code = "NC",
                            Alpha3Code = "NCL",
                            Name = "New Caledonia"
                        },
                        new
                        {
                            Id = 155,
                            Alpha2Code = "NZ",
                            Alpha3Code = "NZL",
                            Name = "New Zealand"
                        },
                        new
                        {
                            Id = 156,
                            Alpha2Code = "NI",
                            Alpha3Code = "NIC",
                            Name = "Nicaragua"
                        },
                        new
                        {
                            Id = 157,
                            Alpha2Code = "NE",
                            Alpha3Code = "NER",
                            Name = "Niger"
                        },
                        new
                        {
                            Id = 158,
                            Alpha2Code = "NG",
                            Alpha3Code = "NGA",
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = 159,
                            Alpha2Code = "NU",
                            Alpha3Code = "NIU",
                            Name = "Niue"
                        },
                        new
                        {
                            Id = 160,
                            Alpha2Code = "NF",
                            Alpha3Code = "NFK",
                            Name = "Norfolk Island"
                        },
                        new
                        {
                            Id = 161,
                            Alpha2Code = "KP",
                            Alpha3Code = "PRK",
                            Name = "North Korea"
                        },
                        new
                        {
                            Id = 162,
                            Alpha2Code = "MP",
                            Alpha3Code = "MNP",
                            Name = "Northern Mariana Islands"
                        },
                        new
                        {
                            Id = 163,
                            Alpha2Code = "NO",
                            Alpha3Code = "NOR",
                            Name = "Norway"
                        },
                        new
                        {
                            Id = 164,
                            Alpha2Code = "OM",
                            Alpha3Code = "OMN",
                            Name = "Oman"
                        },
                        new
                        {
                            Id = 165,
                            Alpha2Code = "PK",
                            Alpha3Code = "PAK",
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 166,
                            Alpha2Code = "PW",
                            Alpha3Code = "PLW",
                            Name = "Palau"
                        },
                        new
                        {
                            Id = 167,
                            Alpha2Code = "PS",
                            Alpha3Code = "PSE",
                            Name = "Palestinian Territory"
                        },
                        new
                        {
                            Id = 168,
                            Alpha2Code = "PA",
                            Alpha3Code = "PAN",
                            Name = "Panama"
                        },
                        new
                        {
                            Id = 169,
                            Alpha2Code = "PG",
                            Alpha3Code = "PNG",
                            Name = "Papua New Guinea"
                        },
                        new
                        {
                            Id = 170,
                            Alpha2Code = "PY",
                            Alpha3Code = "PRY",
                            Name = "Paraguay"
                        },
                        new
                        {
                            Id = 171,
                            Alpha2Code = "PE",
                            Alpha3Code = "PER",
                            Name = "Peru"
                        },
                        new
                        {
                            Id = 172,
                            Alpha2Code = "PH",
                            Alpha3Code = "PHL",
                            Name = "Philippines"
                        },
                        new
                        {
                            Id = 173,
                            Alpha2Code = "PN",
                            Alpha3Code = "PCN",
                            Name = "Pitcairn"
                        },
                        new
                        {
                            Id = 174,
                            Alpha2Code = "PL",
                            Alpha3Code = "POL",
                            Name = "Poland"
                        },
                        new
                        {
                            Id = 175,
                            Alpha2Code = "PT",
                            Alpha3Code = "PRT",
                            Name = "Portugal"
                        },
                        new
                        {
                            Id = 176,
                            Alpha2Code = "PR",
                            Alpha3Code = "PRI",
                            Name = "Puerto Rico"
                        },
                        new
                        {
                            Id = 177,
                            Alpha2Code = "QA",
                            Alpha3Code = "QAT",
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 178,
                            Alpha2Code = "RO",
                            Alpha3Code = "ROU",
                            Name = "Romania"
                        },
                        new
                        {
                            Id = 179,
                            Alpha2Code = "RU",
                            Alpha3Code = "RUS",
                            Name = "Russia"
                        },
                        new
                        {
                            Id = 180,
                            Alpha2Code = "RW",
                            Alpha3Code = "RWA",
                            Name = "Rwanda"
                        },
                        new
                        {
                            Id = 181,
                            Alpha2Code = "RE",
                            Alpha3Code = "REU",
                            Name = "Réunion"
                        },
                        new
                        {
                            Id = 182,
                            Alpha2Code = "BL",
                            Alpha3Code = "BLM",
                            Name = "Saint Barthélemy"
                        },
                        new
                        {
                            Id = 183,
                            Alpha2Code = "SH",
                            Alpha3Code = "SHN",
                            Name = "Saint Helena, Ascension and Tristan Da Cunha"
                        },
                        new
                        {
                            Id = 184,
                            Alpha2Code = "KN",
                            Alpha3Code = "KNA",
                            Name = "Saint Kitts and Nevis"
                        },
                        new
                        {
                            Id = 185,
                            Alpha2Code = "LC",
                            Alpha3Code = "LCA",
                            Name = "Saint Lucia"
                        },
                        new
                        {
                            Id = 186,
                            Alpha2Code = "MF",
                            Alpha3Code = "MAF",
                            Name = "Saint Martin (French Part)"
                        },
                        new
                        {
                            Id = 187,
                            Alpha2Code = "PM",
                            Alpha3Code = "SPM",
                            Name = "Saint Pierre and Miquelon"
                        },
                        new
                        {
                            Id = 188,
                            Alpha2Code = "VC",
                            Alpha3Code = "VCT",
                            Name = "Saint Vincent and The Grenadines"
                        },
                        new
                        {
                            Id = 189,
                            Alpha2Code = "WS",
                            Alpha3Code = "WSM",
                            Name = "Samoa"
                        },
                        new
                        {
                            Id = 190,
                            Alpha2Code = "SM",
                            Alpha3Code = "SMR",
                            Name = "San Marino"
                        },
                        new
                        {
                            Id = 191,
                            Alpha2Code = "ST",
                            Alpha3Code = "STP",
                            Name = "Sao Tome and Principe"
                        },
                        new
                        {
                            Id = 192,
                            Alpha2Code = "SA",
                            Alpha3Code = "SAU",
                            Name = "Saudi Arabia"
                        },
                        new
                        {
                            Id = 193,
                            Alpha2Code = "SN",
                            Alpha3Code = "SEN",
                            Name = "Senegal"
                        },
                        new
                        {
                            Id = 194,
                            Alpha2Code = "RS",
                            Alpha3Code = "SRB",
                            Name = "Serbia"
                        },
                        new
                        {
                            Id = 195,
                            Alpha2Code = "SC",
                            Alpha3Code = "SYC",
                            Name = "Seychelles"
                        },
                        new
                        {
                            Id = 196,
                            Alpha2Code = "SL",
                            Alpha3Code = "SLE",
                            Name = "Sierra Leone"
                        },
                        new
                        {
                            Id = 197,
                            Alpha2Code = "SG",
                            Alpha3Code = "SGP",
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 198,
                            Alpha2Code = "SX",
                            Alpha3Code = "SXM",
                            Name = "Sint Maarten (Dutch Part)"
                        },
                        new
                        {
                            Id = 199,
                            Alpha2Code = "SK",
                            Alpha3Code = "SVK",
                            Name = "Slovakia"
                        },
                        new
                        {
                            Id = 200,
                            Alpha2Code = "SI",
                            Alpha3Code = "SVN",
                            Name = "Slovenia"
                        },
                        new
                        {
                            Id = 201,
                            Alpha2Code = "SB",
                            Alpha3Code = "SLB",
                            Name = "Solomon Islands"
                        },
                        new
                        {
                            Id = 202,
                            Alpha2Code = "SO",
                            Alpha3Code = "SOM",
                            Name = "Somalia"
                        },
                        new
                        {
                            Id = 203,
                            Alpha2Code = "ZA",
                            Alpha3Code = "ZAF",
                            Name = "South Africa"
                        },
                        new
                        {
                            Id = 204,
                            Alpha2Code = "GS",
                            Alpha3Code = "SGS",
                            Name = "South Georgia"
                        },
                        new
                        {
                            Id = 205,
                            Alpha2Code = "KR",
                            Alpha3Code = "KOR",
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = 206,
                            Alpha2Code = "SS",
                            Alpha3Code = "SSD",
                            Name = "South Sudan"
                        },
                        new
                        {
                            Id = 207,
                            Alpha2Code = "ES",
                            Alpha3Code = "ESP",
                            Name = "Spain"
                        },
                        new
                        {
                            Id = 208,
                            Alpha2Code = "LK",
                            Alpha3Code = "LKA",
                            Name = "Sri Lanka"
                        },
                        new
                        {
                            Id = 209,
                            Alpha2Code = "SD",
                            Alpha3Code = "SDN",
                            Name = "Sudan"
                        },
                        new
                        {
                            Id = 210,
                            Alpha2Code = "SR",
                            Alpha3Code = "SUR",
                            Name = "Suriname"
                        },
                        new
                        {
                            Id = 211,
                            Alpha2Code = "SJ",
                            Alpha3Code = "SJM",
                            Name = "Svalbard and Jan Mayen"
                        },
                        new
                        {
                            Id = 212,
                            Alpha2Code = "SZ",
                            Alpha3Code = "SWZ",
                            Name = "Swaziland"
                        },
                        new
                        {
                            Id = 213,
                            Alpha2Code = "SE",
                            Alpha3Code = "SWE",
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 214,
                            Alpha2Code = "CH",
                            Alpha3Code = "CHE",
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 215,
                            Alpha2Code = "SY",
                            Alpha3Code = "SYR",
                            Name = "Syrian Arab Republic"
                        },
                        new
                        {
                            Id = 216,
                            Alpha2Code = "TW",
                            Alpha3Code = "TWN",
                            Name = "Taiwan"
                        },
                        new
                        {
                            Id = 217,
                            Alpha2Code = "TJ",
                            Alpha3Code = "TJK",
                            Name = "Tajikistan"
                        },
                        new
                        {
                            Id = 218,
                            Alpha2Code = "TZ",
                            Alpha3Code = "TZA",
                            Name = "Tanzania"
                        },
                        new
                        {
                            Id = 219,
                            Alpha2Code = "TH",
                            Alpha3Code = "THA",
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 220,
                            Alpha2Code = "TL",
                            Alpha3Code = "TLS",
                            Name = "Timor-Leste"
                        },
                        new
                        {
                            Id = 221,
                            Alpha2Code = "TG",
                            Alpha3Code = "TGO",
                            Name = "Togo"
                        },
                        new
                        {
                            Id = 222,
                            Alpha2Code = "TK",
                            Alpha3Code = "TKL",
                            Name = "Tokelau"
                        },
                        new
                        {
                            Id = 223,
                            Alpha2Code = "TO",
                            Alpha3Code = "TON",
                            Name = "Tonga"
                        },
                        new
                        {
                            Id = 224,
                            Alpha2Code = "TT",
                            Alpha3Code = "TTO",
                            Name = "Trinidad and Tobago"
                        },
                        new
                        {
                            Id = 225,
                            Alpha2Code = "TN",
                            Alpha3Code = "TUN",
                            Name = "Tunisia"
                        },
                        new
                        {
                            Id = 226,
                            Alpha2Code = "TR",
                            Alpha3Code = "TUR",
                            Name = "Turkey"
                        },
                        new
                        {
                            Id = 227,
                            Alpha2Code = "TM",
                            Alpha3Code = "TKM",
                            Name = "Turkmenistan"
                        },
                        new
                        {
                            Id = 228,
                            Alpha2Code = "TC",
                            Alpha3Code = "TCA",
                            Name = "Turks and Caicos Islands"
                        },
                        new
                        {
                            Id = 229,
                            Alpha2Code = "TV",
                            Alpha3Code = "TUV",
                            Name = "Tuvalu"
                        },
                        new
                        {
                            Id = 230,
                            Alpha2Code = "UG",
                            Alpha3Code = "UGA",
                            Name = "Uganda"
                        },
                        new
                        {
                            Id = 231,
                            Alpha2Code = "UA",
                            Alpha3Code = "UKR",
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 232,
                            Alpha2Code = "AE",
                            Alpha3Code = "ARE",
                            Name = "United Arab Emirates"
                        },
                        new
                        {
                            Id = 233,
                            Alpha2Code = "GB",
                            Alpha3Code = "GBR",
                            Name = "United Kingdom"
                        },
                        new
                        {
                            Id = 234,
                            Alpha2Code = "US",
                            Alpha3Code = "USA",
                            Name = "United States"
                        },
                        new
                        {
                            Id = 235,
                            Alpha2Code = "UM",
                            Alpha3Code = "UMI",
                            Name = "United States Minor Outlying Islands"
                        },
                        new
                        {
                            Id = 236,
                            Alpha2Code = "UY",
                            Alpha3Code = "URY",
                            Name = "Uruguay"
                        },
                        new
                        {
                            Id = 237,
                            Alpha2Code = "UZ",
                            Alpha3Code = "UZB",
                            Name = "Uzbekistan"
                        },
                        new
                        {
                            Id = 238,
                            Alpha2Code = "VU",
                            Alpha3Code = "VUT",
                            Name = "Vanuatu"
                        },
                        new
                        {
                            Id = 239,
                            Alpha2Code = "VA",
                            Alpha3Code = "VAT",
                            Name = "Vatican City"
                        },
                        new
                        {
                            Id = 240,
                            Alpha2Code = "VE",
                            Alpha3Code = "VEN",
                            Name = "Venezuela"
                        },
                        new
                        {
                            Id = 241,
                            Alpha2Code = "VN",
                            Alpha3Code = "VNM",
                            Name = "Viet Nam"
                        },
                        new
                        {
                            Id = 242,
                            Alpha2Code = "VG",
                            Alpha3Code = "VGB",
                            Name = "Virgin Islands, British"
                        },
                        new
                        {
                            Id = 243,
                            Alpha2Code = "VI",
                            Alpha3Code = "VIR",
                            Name = "Virgin Islands, U.S."
                        },
                        new
                        {
                            Id = 244,
                            Alpha2Code = "WF",
                            Alpha3Code = "WLF",
                            Name = "Wallis and Futuna"
                        },
                        new
                        {
                            Id = 245,
                            Alpha2Code = "EH",
                            Alpha3Code = "ESH",
                            Name = "Western Sahara"
                        },
                        new
                        {
                            Id = 246,
                            Alpha2Code = "YE",
                            Alpha3Code = "YEM",
                            Name = "Yemen"
                        },
                        new
                        {
                            Id = 247,
                            Alpha2Code = "ZM",
                            Alpha3Code = "ZMB",
                            Name = "Zambia"
                        },
                        new
                        {
                            Id = 248,
                            Alpha2Code = "ZW",
                            Alpha3Code = "ZWE",
                            Name = "Zimbabwe"
                        },
                        new
                        {
                            Id = 249,
                            Alpha2Code = "AX",
                            Alpha3Code = "ALA",
                            Name = "Åland Islands"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.DevelopersAndPublishers.DeveloperAndPublisher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int?>("CountryId")
                        .HasColumnType("integer")
                        .HasColumnName("country_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .HasColumnName("description");

                    b.Property<DateTime?>("FoundedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("founded_date")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_approved");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("logo_url");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<string>("Website")
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("website");

                    b.HasKey("Id")
                        .HasName("pk_developers_and_publishers");

                    b.HasIndex("CountryId")
                        .HasDatabaseName("ix_developers_and_publishers_country_id");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_developers_and_publishers_created_by");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_developers_and_publishers_modified_by");

                    b.ToTable("developers_and_publishers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "14797ced-77c7-457c-91d6-da214ffa97ba",
                            CountryId = 231,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "DeveloperAndPublisher description",
                            FoundedDate = new DateTime(2025, 8, 24, 17, 53, 57, 962, DateTimeKind.Utc).AddTicks(4701),
                            IsApproved = true,
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "DeveloperAndPublisher"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Game", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("cover_image_url");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("description");

                    b.Property<string>("DeveloperId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("developer_id");

                    b.Property<int?>("Discount")
                        .HasColumnType("integer")
                        .HasColumnName("discount");

                    b.Property<bool?>("IsApproved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_approved");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("name");

                    b.Property<int?>("PercentageOfPositiveReviews")
                        .HasColumnType("integer")
                        .HasColumnName("percentage_of_positive_reviews");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("PublisherId")
                        .HasColumnType("text")
                        .HasColumnName("publisher_id");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("release_date");

                    b.Property<List<string>>("ScreenshotUrls")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("screenshot_urls");

                    b.HasKey("Id")
                        .HasName("pk_games");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_games_created_by");

                    b.HasIndex("DeveloperId")
                        .HasDatabaseName("ix_games_developer_id");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_games_modified_by");

                    b.HasIndex("PublisherId")
                        .HasDatabaseName("ix_games_publisher_id");

                    b.ToTable("games", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_genres");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_genres_created_by");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_genres_modified_by");

                    b.ToTable("genres", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Racing"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Localization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<bool>("FullAudio")
                        .HasColumnType("boolean")
                        .HasColumnName("full_audio");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<bool>("Interface")
                        .HasColumnType("boolean")
                        .HasColumnName("interface");

                    b.Property<int>("LanguageId")
                        .HasColumnType("integer")
                        .HasColumnName("language_id");

                    b.Property<bool>("Subtitles")
                        .HasColumnType("boolean")
                        .HasColumnName("subtitles");

                    b.HasKey("Id")
                        .HasName("pk_localizations");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_localizations_game_id");

                    b.HasIndex("LanguageId")
                        .HasDatabaseName("ix_localizations_language_id");

                    b.ToTable("localizations", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Review", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<bool>("IsPositive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_positive");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("Id")
                        .HasName("pk_reviews");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_reviews_game_id");

                    b.ToTable("reviews", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.SystemRequirements", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("DirectX")
                        .HasColumnType("text")
                        .HasColumnName("direct_x");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<string>("Graphics")
                        .HasColumnType("text")
                        .HasColumnName("graphics");

                    b.Property<string>("Memory")
                        .HasColumnType("text")
                        .HasColumnName("memory");

                    b.Property<string>("Network")
                        .HasColumnType("text")
                        .HasColumnName("network");

                    b.Property<string>("OS")
                        .HasColumnType("text")
                        .HasColumnName("os");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("platform");

                    b.Property<string>("Processor")
                        .HasColumnType("text")
                        .HasColumnName("processor");

                    b.Property<string>("RequirementType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("requirement_type");

                    b.Property<string>("Storage")
                        .HasColumnType("text")
                        .HasColumnName("storage");

                    b.HasKey("Id")
                        .HasName("pk_system_requirements");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_system_requirements_game_id");

                    b.ToTable("system_requirements", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.Item", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("text")
                        .HasColumnName("image_url");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_items");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_items_created_by");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_items_game_id");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_items_modified_by");

                    b.ToTable("items", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.MarketItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<DateTime>("ModifiedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified_at")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("modified_by");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("UserItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_item_id");

                    b.HasKey("Id")
                        .HasName("pk_market_items");

                    b.HasIndex("CreatedBy")
                        .HasDatabaseName("ix_market_items_created_by");

                    b.HasIndex("ModifiedBy")
                        .HasDatabaseName("ix_market_items_modified_by");

                    b.HasIndex("UserItemId")
                        .HasDatabaseName("ix_market_items_user_item_id");

                    b.ToTable("market_items", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.MarketItemHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("BuyerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("buyer_id");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("price");

                    b.Property<string>("SellerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("seller_id");

                    b.Property<string>("UserItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_item_id");

                    b.HasKey("Id")
                        .HasName("pk_market_items_history");

                    b.HasIndex("BuyerId")
                        .HasDatabaseName("ix_market_items_history_buyer_id");

                    b.HasIndex("SellerId")
                        .HasDatabaseName("ix_market_items_history_seller_id");

                    b.HasIndex("UserItemId")
                        .HasDatabaseName("ix_market_items_history_user_item_id");

                    b.ToTable("market_items_history", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.UserItem", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<bool>("IsTradable")
                        .HasColumnType("boolean")
                        .HasColumnName("is_tradable");

                    b.Property<string>("ItemId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("item_id");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_user_items");

                    b.HasIndex("ItemId")
                        .HasDatabaseName("ix_user_items_item_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_user_items_user_id");

                    b.ToTable("user_items", (string)null);
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Languages.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_languages");

                    b.ToTable("languages", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "aa",
                            Name = "Afar"
                        },
                        new
                        {
                            Id = 2,
                            Code = "ab",
                            Name = "Abkhazian"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ae",
                            Name = "Avestan"
                        },
                        new
                        {
                            Id = 4,
                            Code = "af",
                            Name = "Afrikaans"
                        },
                        new
                        {
                            Id = 5,
                            Code = "ak",
                            Name = "Akan"
                        },
                        new
                        {
                            Id = 6,
                            Code = "am",
                            Name = "Amharic"
                        },
                        new
                        {
                            Id = 7,
                            Code = "an",
                            Name = "Aragonese"
                        },
                        new
                        {
                            Id = 8,
                            Code = "ar",
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = 9,
                            Code = "as",
                            Name = "Assamese"
                        },
                        new
                        {
                            Id = 10,
                            Code = "av",
                            Name = "Avaric"
                        },
                        new
                        {
                            Id = 11,
                            Code = "ay",
                            Name = "Aymara"
                        },
                        new
                        {
                            Id = 12,
                            Code = "az",
                            Name = "Azerbaijani"
                        },
                        new
                        {
                            Id = 13,
                            Code = "ba",
                            Name = "Bashkir"
                        },
                        new
                        {
                            Id = 14,
                            Code = "be",
                            Name = "Belarusian"
                        },
                        new
                        {
                            Id = 15,
                            Code = "bg",
                            Name = "Bulgarian"
                        },
                        new
                        {
                            Id = 16,
                            Code = "bh",
                            Name = "Bihari languages"
                        },
                        new
                        {
                            Id = 17,
                            Code = "bi",
                            Name = "Bislama"
                        },
                        new
                        {
                            Id = 18,
                            Code = "bm",
                            Name = "Bambara"
                        },
                        new
                        {
                            Id = 19,
                            Code = "bn",
                            Name = "Bengali"
                        },
                        new
                        {
                            Id = 20,
                            Code = "bo",
                            Name = "Tibetan"
                        },
                        new
                        {
                            Id = 21,
                            Code = "br",
                            Name = "Breton"
                        },
                        new
                        {
                            Id = 22,
                            Code = "bs",
                            Name = "Bosnian"
                        },
                        new
                        {
                            Id = 23,
                            Code = "ca",
                            Name = "Catalan; Valencian"
                        },
                        new
                        {
                            Id = 24,
                            Code = "ce",
                            Name = "Chechen"
                        },
                        new
                        {
                            Id = 25,
                            Code = "ch",
                            Name = "Chamorro"
                        },
                        new
                        {
                            Id = 26,
                            Code = "co",
                            Name = "Corsican"
                        },
                        new
                        {
                            Id = 27,
                            Code = "cr",
                            Name = "Cree"
                        },
                        new
                        {
                            Id = 28,
                            Code = "cs",
                            Name = "Czech"
                        },
                        new
                        {
                            Id = 29,
                            Code = "cv",
                            Name = "Chuvash"
                        },
                        new
                        {
                            Id = 30,
                            Code = "cy",
                            Name = "Welsh"
                        },
                        new
                        {
                            Id = 31,
                            Code = "da",
                            Name = "Danish"
                        },
                        new
                        {
                            Id = 32,
                            Code = "de",
                            Name = "German"
                        },
                        new
                        {
                            Id = 33,
                            Code = "dv",
                            Name = "Divehi; Dhivehi; Maldivian"
                        },
                        new
                        {
                            Id = 34,
                            Code = "dz",
                            Name = "Dzongkha"
                        },
                        new
                        {
                            Id = 35,
                            Code = "ee",
                            Name = "Ewe"
                        },
                        new
                        {
                            Id = 36,
                            Code = "el",
                            Name = "Greek, Modern (1453-)"
                        },
                        new
                        {
                            Id = 37,
                            Code = "en",
                            Name = "English"
                        },
                        new
                        {
                            Id = 38,
                            Code = "eo",
                            Name = "Esperanto"
                        },
                        new
                        {
                            Id = 39,
                            Code = "es",
                            Name = "Spanish; Castilian"
                        },
                        new
                        {
                            Id = 40,
                            Code = "et",
                            Name = "Estonian"
                        },
                        new
                        {
                            Id = 41,
                            Code = "eu",
                            Name = "Basque"
                        },
                        new
                        {
                            Id = 42,
                            Code = "fa",
                            Name = "Persian"
                        },
                        new
                        {
                            Id = 43,
                            Code = "ff",
                            Name = "Fulah"
                        },
                        new
                        {
                            Id = 44,
                            Code = "fi",
                            Name = "Finnish"
                        },
                        new
                        {
                            Id = 45,
                            Code = "fj",
                            Name = "Fijian"
                        },
                        new
                        {
                            Id = 46,
                            Code = "fo",
                            Name = "Faroese"
                        },
                        new
                        {
                            Id = 47,
                            Code = "fr",
                            Name = "French"
                        },
                        new
                        {
                            Id = 48,
                            Code = "fy",
                            Name = "Western Frisian"
                        },
                        new
                        {
                            Id = 49,
                            Code = "ga",
                            Name = "Irish"
                        },
                        new
                        {
                            Id = 50,
                            Code = "gd",
                            Name = "Gaelic; Scomttish Gaelic"
                        },
                        new
                        {
                            Id = 51,
                            Code = "gl",
                            Name = "Galician"
                        },
                        new
                        {
                            Id = 52,
                            Code = "gn",
                            Name = "Guarani"
                        },
                        new
                        {
                            Id = 53,
                            Code = "gu",
                            Name = "Gujarati"
                        },
                        new
                        {
                            Id = 54,
                            Code = "gv",
                            Name = "Manx"
                        },
                        new
                        {
                            Id = 55,
                            Code = "ha",
                            Name = "Hausa"
                        },
                        new
                        {
                            Id = 56,
                            Code = "he",
                            Name = "Hebrew"
                        },
                        new
                        {
                            Id = 57,
                            Code = "hi",
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = 58,
                            Code = "ho",
                            Name = "Hiri Motu"
                        },
                        new
                        {
                            Id = 59,
                            Code = "hr",
                            Name = "Croatian"
                        },
                        new
                        {
                            Id = 60,
                            Code = "ht",
                            Name = "Haitian; Haitian Creole"
                        },
                        new
                        {
                            Id = 61,
                            Code = "hu",
                            Name = "Hungarian"
                        },
                        new
                        {
                            Id = 62,
                            Code = "hy",
                            Name = "Armenian"
                        },
                        new
                        {
                            Id = 63,
                            Code = "hz",
                            Name = "Herero"
                        },
                        new
                        {
                            Id = 64,
                            Code = "id",
                            Name = "Indonesian"
                        },
                        new
                        {
                            Id = 65,
                            Code = "ie",
                            Name = "Interlingue; Occidental"
                        },
                        new
                        {
                            Id = 66,
                            Code = "ig",
                            Name = "Igbo"
                        },
                        new
                        {
                            Id = 67,
                            Code = "ii",
                            Name = "Sichuan Yi; Nuosu"
                        },
                        new
                        {
                            Id = 68,
                            Code = "ik",
                            Name = "Inupiaq"
                        },
                        new
                        {
                            Id = 69,
                            Code = "io",
                            Name = "Ido"
                        },
                        new
                        {
                            Id = 70,
                            Code = "is",
                            Name = "Icelandic"
                        },
                        new
                        {
                            Id = 71,
                            Code = "it",
                            Name = "Italian"
                        },
                        new
                        {
                            Id = 72,
                            Code = "iu",
                            Name = "Inuktitut"
                        },
                        new
                        {
                            Id = 73,
                            Code = "ja",
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = 74,
                            Code = "jv",
                            Name = "Javanese"
                        },
                        new
                        {
                            Id = 75,
                            Code = "ka",
                            Name = "Georgian"
                        },
                        new
                        {
                            Id = 76,
                            Code = "kg",
                            Name = "Kongo"
                        },
                        new
                        {
                            Id = 77,
                            Code = "ki",
                            Name = "Kikuyu; Gikuyu"
                        },
                        new
                        {
                            Id = 78,
                            Code = "kj",
                            Name = "Kuanyama; Kwanyama"
                        },
                        new
                        {
                            Id = 79,
                            Code = "kk",
                            Name = "Kazakh"
                        },
                        new
                        {
                            Id = 80,
                            Code = "kl",
                            Name = "Kalaallisut; Greenlandic"
                        },
                        new
                        {
                            Id = 81,
                            Code = "km",
                            Name = "Central Khmer"
                        },
                        new
                        {
                            Id = 82,
                            Code = "kn",
                            Name = "Kannada"
                        },
                        new
                        {
                            Id = 83,
                            Code = "ko",
                            Name = "Korean"
                        },
                        new
                        {
                            Id = 84,
                            Code = "kr",
                            Name = "Kanuri"
                        },
                        new
                        {
                            Id = 85,
                            Code = "ks",
                            Name = "Kashmiri"
                        },
                        new
                        {
                            Id = 86,
                            Code = "ku",
                            Name = "Kurdish"
                        },
                        new
                        {
                            Id = 87,
                            Code = "kv",
                            Name = "Komi"
                        },
                        new
                        {
                            Id = 88,
                            Code = "kw",
                            Name = "Cornish"
                        },
                        new
                        {
                            Id = 89,
                            Code = "ky",
                            Name = "Kirghiz; Kyrgyz"
                        },
                        new
                        {
                            Id = 90,
                            Code = "la",
                            Name = "Latin"
                        },
                        new
                        {
                            Id = 91,
                            Code = "lb",
                            Name = "Luxembourgish; Letzeburgesch"
                        },
                        new
                        {
                            Id = 92,
                            Code = "lg",
                            Name = "Ganda"
                        },
                        new
                        {
                            Id = 93,
                            Code = "li",
                            Name = "Limburgan; Limburger; Limburgish"
                        },
                        new
                        {
                            Id = 94,
                            Code = "ln",
                            Name = "Lingala"
                        },
                        new
                        {
                            Id = 95,
                            Code = "lo",
                            Name = "Lao"
                        },
                        new
                        {
                            Id = 96,
                            Code = "lt",
                            Name = "Lithuanian"
                        },
                        new
                        {
                            Id = 97,
                            Code = "lu",
                            Name = "Luba-Katanga"
                        },
                        new
                        {
                            Id = 98,
                            Code = "lv",
                            Name = "Latvian"
                        },
                        new
                        {
                            Id = 99,
                            Code = "mg",
                            Name = "Malagasy"
                        },
                        new
                        {
                            Id = 100,
                            Code = "mh",
                            Name = "Marshallese"
                        },
                        new
                        {
                            Id = 101,
                            Code = "mi",
                            Name = "Maori"
                        },
                        new
                        {
                            Id = 102,
                            Code = "mk",
                            Name = "Macedonian"
                        },
                        new
                        {
                            Id = 103,
                            Code = "ml",
                            Name = "Malayalam"
                        },
                        new
                        {
                            Id = 104,
                            Code = "mn",
                            Name = "Mongolian"
                        },
                        new
                        {
                            Id = 105,
                            Code = "mr",
                            Name = "Marathi"
                        },
                        new
                        {
                            Id = 106,
                            Code = "ms",
                            Name = "Malay"
                        },
                        new
                        {
                            Id = 107,
                            Code = "mt",
                            Name = "Maltese"
                        },
                        new
                        {
                            Id = 108,
                            Code = "my",
                            Name = "Burmese"
                        },
                        new
                        {
                            Id = 109,
                            Code = "na",
                            Name = "Nauru"
                        },
                        new
                        {
                            Id = 110,
                            Code = "nb",
                            Name = "Bokmål, Norwegian; Norwegian Bokmål"
                        },
                        new
                        {
                            Id = 111,
                            Code = "nd",
                            Name = "Ndebele, North; North Ndebele"
                        },
                        new
                        {
                            Id = 112,
                            Code = "ne",
                            Name = "Nepali"
                        },
                        new
                        {
                            Id = 113,
                            Code = "ng",
                            Name = "Ndonga"
                        },
                        new
                        {
                            Id = 114,
                            Code = "nl",
                            Name = "Dutch; Flemish"
                        },
                        new
                        {
                            Id = 115,
                            Code = "nn",
                            Name = "Norwegian Nynorsk; Nynorsk, Norwegian"
                        },
                        new
                        {
                            Id = 116,
                            Code = "no",
                            Name = "Norwegian"
                        },
                        new
                        {
                            Id = 117,
                            Code = "nr",
                            Name = "Ndebele, South; South Ndebele"
                        },
                        new
                        {
                            Id = 118,
                            Code = "nv",
                            Name = "Navajo; Navaho"
                        },
                        new
                        {
                            Id = 119,
                            Code = "ny",
                            Name = "Chichewa; Chewa; Nyanja"
                        },
                        new
                        {
                            Id = 120,
                            Code = "oc",
                            Name = "Occitan (post 1500)"
                        },
                        new
                        {
                            Id = 121,
                            Code = "oj",
                            Name = "Ojibwa"
                        },
                        new
                        {
                            Id = 122,
                            Code = "om",
                            Name = "Oromo"
                        },
                        new
                        {
                            Id = 123,
                            Code = "or",
                            Name = "Oriya"
                        },
                        new
                        {
                            Id = 124,
                            Code = "os",
                            Name = "Ossetian; Ossetic"
                        },
                        new
                        {
                            Id = 125,
                            Code = "pa",
                            Name = "Panjabi; Punjabi"
                        },
                        new
                        {
                            Id = 126,
                            Code = "pi",
                            Name = "Pali"
                        },
                        new
                        {
                            Id = 127,
                            Code = "pl",
                            Name = "Polish"
                        },
                        new
                        {
                            Id = 128,
                            Code = "ps",
                            Name = "Pushto; Pashto"
                        },
                        new
                        {
                            Id = 129,
                            Code = "pt",
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = 130,
                            Code = "qu",
                            Name = "Quechua"
                        },
                        new
                        {
                            Id = 131,
                            Code = "rm",
                            Name = "Romansh"
                        },
                        new
                        {
                            Id = 132,
                            Code = "rn",
                            Name = "Rundi"
                        },
                        new
                        {
                            Id = 133,
                            Code = "ro",
                            Name = "Romanian; Moldavian; Moldovan"
                        },
                        new
                        {
                            Id = 134,
                            Code = "ru",
                            Name = "Russian"
                        },
                        new
                        {
                            Id = 135,
                            Code = "rw",
                            Name = "Kinyarwanda"
                        },
                        new
                        {
                            Id = 136,
                            Code = "sa",
                            Name = "Sanskrit"
                        },
                        new
                        {
                            Id = 137,
                            Code = "sc",
                            Name = "Sardinian"
                        },
                        new
                        {
                            Id = 138,
                            Code = "sd",
                            Name = "Sindhi"
                        },
                        new
                        {
                            Id = 139,
                            Code = "se",
                            Name = "Northern Sami"
                        },
                        new
                        {
                            Id = 140,
                            Code = "sg",
                            Name = "Sango"
                        },
                        new
                        {
                            Id = 141,
                            Code = "si",
                            Name = "Sinhala; Sinhalese"
                        },
                        new
                        {
                            Id = 142,
                            Code = "sk",
                            Name = "Slovak"
                        },
                        new
                        {
                            Id = 143,
                            Code = "sl",
                            Name = "Slovenian"
                        },
                        new
                        {
                            Id = 144,
                            Code = "sm",
                            Name = "Samoan"
                        },
                        new
                        {
                            Id = 145,
                            Code = "sn",
                            Name = "Shona"
                        },
                        new
                        {
                            Id = 146,
                            Code = "so",
                            Name = "Somali"
                        },
                        new
                        {
                            Id = 147,
                            Code = "sq",
                            Name = "Albanian"
                        },
                        new
                        {
                            Id = 148,
                            Code = "sr",
                            Name = "Serbian"
                        },
                        new
                        {
                            Id = 149,
                            Code = "ss",
                            Name = "Swati"
                        },
                        new
                        {
                            Id = 150,
                            Code = "st",
                            Name = "Sotho, Southern"
                        },
                        new
                        {
                            Id = 151,
                            Code = "su",
                            Name = "Sundanese"
                        },
                        new
                        {
                            Id = 152,
                            Code = "sv",
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = 153,
                            Code = "sw",
                            Name = "Swahili"
                        },
                        new
                        {
                            Id = 154,
                            Code = "ta",
                            Name = "Tamil"
                        },
                        new
                        {
                            Id = 155,
                            Code = "te",
                            Name = "Telugu"
                        },
                        new
                        {
                            Id = 156,
                            Code = "tg",
                            Name = "Tajik"
                        },
                        new
                        {
                            Id = 157,
                            Code = "th",
                            Name = "Thai"
                        },
                        new
                        {
                            Id = 158,
                            Code = "ti",
                            Name = "Tigrinya"
                        },
                        new
                        {
                            Id = 159,
                            Code = "tk",
                            Name = "Turkmen"
                        },
                        new
                        {
                            Id = 160,
                            Code = "tl",
                            Name = "Tagalog"
                        },
                        new
                        {
                            Id = 161,
                            Code = "tn",
                            Name = "Tswana"
                        },
                        new
                        {
                            Id = 162,
                            Code = "to",
                            Name = "Tonga (Tonga Islands)"
                        },
                        new
                        {
                            Id = 163,
                            Code = "tr",
                            Name = "Turkish"
                        },
                        new
                        {
                            Id = 164,
                            Code = "ts",
                            Name = "Tsonga"
                        },
                        new
                        {
                            Id = 165,
                            Code = "tt",
                            Name = "Tatar"
                        },
                        new
                        {
                            Id = 166,
                            Code = "tw",
                            Name = "Twi"
                        },
                        new
                        {
                            Id = 167,
                            Code = "ty",
                            Name = "Tahitian"
                        },
                        new
                        {
                            Id = 168,
                            Code = "ug",
                            Name = "Uighur; Uyghur"
                        },
                        new
                        {
                            Id = 169,
                            Code = "uk",
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = 170,
                            Code = "ur",
                            Name = "Urdu"
                        },
                        new
                        {
                            Id = 171,
                            Code = "uz",
                            Name = "Uzbek"
                        },
                        new
                        {
                            Id = 172,
                            Code = "ve",
                            Name = "Venda"
                        },
                        new
                        {
                            Id = 173,
                            Code = "vi",
                            Name = "Vietnamese"
                        },
                        new
                        {
                            Id = 174,
                            Code = "vo",
                            Name = "Volapük"
                        },
                        new
                        {
                            Id = 175,
                            Code = "wa",
                            Name = "Walloon"
                        },
                        new
                        {
                            Id = 176,
                            Code = "wo",
                            Name = "Wolof"
                        },
                        new
                        {
                            Id = 177,
                            Code = "xh",
                            Name = "Xhosa"
                        },
                        new
                        {
                            Id = 178,
                            Code = "yi",
                            Name = "Yiddish"
                        },
                        new
                        {
                            Id = 179,
                            Code = "yo",
                            Name = "Yoruba"
                        },
                        new
                        {
                            Id = 180,
                            Code = "za",
                            Name = "Zhuang; Chuang"
                        },
                        new
                        {
                            Id = 181,
                            Code = "zh",
                            Name = "Chinese"
                        },
                        new
                        {
                            Id = 182,
                            Code = "zu",
                            Name = "Zulu"
                        });
                });

            modelBuilder.Entity("SteamClone.Domain.Models.UserGameLibraries.UserGameLibrary", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.Property<string>("GameId")
                        .HasColumnType("text")
                        .HasColumnName("game_id");

                    b.Property<DateTime>("DateAdded")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_added")
                        .HasDefaultValueSql("timezone('utc', now())");

                    b.Property<bool>("IsFavorite")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_favorite");

                    b.HasKey("UserId", "GameId")
                        .HasName("pk_user_game_libraries");

                    b.HasIndex("GameId")
                        .HasDatabaseName("ix_user_game_libraries_game_id");

                    b.ToTable("user_game_libraries", (string)null);
                });

            modelBuilder.Entity("DeveloperAndPublisherUser", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("AssociatedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_dev_and_pub_associated_users_users_associated_users_id");

                    b.HasOne("SteamClone.Domain.Models.DevelopersAndPublishers.DeveloperAndPublisher", null)
                        .WithMany()
                        .HasForeignKey("DeveloperAndPublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_dev_and_pub_associated_users_developers_and_publishers_deve");
                });

            modelBuilder.Entity("GameGenre", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_genre_games_game_id");

                    b.HasOne("SteamClone.Domain.Models.Games.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_game_genre_genres_genres_id");
                });

            modelBuilder.Entity("GameUser", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("AssociatedUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_games_associated_users_users_associated_users_id");

                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_games_associated_users_games_game_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.RefreshToken", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_refresh_tokens_users_user_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.Balance", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithOne("Balance")
                        .HasForeignKey("SteamClone.Domain.Models.Auth.Users.Balance", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_balances_users_user_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.Friendship", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", "Receiver")
                        .WithMany("ReceivedFriendships")
                        .HasForeignKey("ReceiverId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_friendships_users_receiver_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", "Sender")
                        .WithMany("SentFriendships")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_friendships_users_sender_id");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.User", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Countries.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_users_countries_country_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_users_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_users_users_modified_by");

                    b.HasOne("SteamClone.Domain.Models.Auth.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_users_roles_role_id");

                    b.Navigation("Country");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.DevelopersAndPublishers.DeveloperAndPublisher", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Countries.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("fk_developers_and_publishers_countries_country_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_developers_and_publishers_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_developers_and_publishers_users_modified_by");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Game", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_games_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.DevelopersAndPublishers.DeveloperAndPublisher", "Developer")
                        .WithMany()
                        .HasForeignKey("DeveloperId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_games_developers_and_publishers_developer_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_games_users_modified_by");

                    b.HasOne("SteamClone.Domain.Models.DevelopersAndPublishers.DeveloperAndPublisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_games_developers_and_publishers_publisher_id");

                    b.Navigation("Developer");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Genre", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_genres_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_genres_users_modified_by");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Localization", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany("Localizations")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_localizations_games_game_id");

                    b.HasOne("SteamClone.Domain.Models.Languages.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_localizations_languages_language_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Review", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_reviews_games_game_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.SystemRequirements", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany("SystemRequirements")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_system_requirements_games_game_id");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.Item", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_items_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.Games.Game", null)
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_items_games_game_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_items_users_modified_by");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.MarketItem", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_market_items_users_created_by");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_market_items_users_modified_by");

                    b.HasOne("SteamClone.Domain.Models.Items.UserItem", "UserItem")
                        .WithMany()
                        .HasForeignKey("UserItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_market_items_user_items_user_item_id");

                    b.Navigation("UserItem");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.MarketItemHistory", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_market_items_history_users_buyer_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_market_items_history_users_seller_id");

                    b.HasOne("SteamClone.Domain.Models.Items.UserItem", "UserItem")
                        .WithMany()
                        .HasForeignKey("UserItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_market_items_history_user_items_user_item_id");

                    b.Navigation("UserItem");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Items.UserItem", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Items.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_items_items_item_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_user_items_users_user_id");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.UserGameLibraries.UserGameLibrary", b =>
                {
                    b.HasOne("SteamClone.Domain.Models.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_game_libraries_games_game_id");

                    b.HasOne("SteamClone.Domain.Models.Auth.Users.User", null)
                        .WithMany("GameLibrary")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_user_game_libraries_users_user_id");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Auth.Users.User", b =>
                {
                    b.Navigation("Balance");

                    b.Navigation("GameLibrary");

                    b.Navigation("ReceivedFriendships");

                    b.Navigation("SentFriendships");
                });

            modelBuilder.Entity("SteamClone.Domain.Models.Games.Game", b =>
                {
                    b.Navigation("Localizations");

                    b.Navigation("Reviews");

                    b.Navigation("SystemRequirements");
                });
#pragma warning restore 612, 618
        }
    }
}
